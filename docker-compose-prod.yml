version: "3"

services:
  python-api:
      container_name: python_host
      build: ./docker/python
      volumes:
        - .:/src
      ports:
        - "8000:8000" # ホストマシンのポート8000を、docker内のポート8000に接続する
      environment:
        PMA_HOST: db
      networks:
        - mysql_bridge
      expose:
        - "8000"
      depends_on:
        - mysql

  mysql:
    container_name: mysql_host
    build: ./docker/mysql
    command: --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d # 定義どおりにテーブル作成
      - ./docker/mysql/conf.d:/etc/mysql/conf.d # MySQLの基本設定(文字化け対策)
      - data-volume:/var/lib/mysql
    restart: always
    platform: linux/amd64
    networks:
      - mysql_bridge
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_general_ci','--default-time-zone=+09:00']

  phpmyadmin:
    container_name: phpmyadmin_host
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80" #localhost:8080 で phpMyAdmin にアクセスできます
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql_host

    networks:
      - mysql_bridge

# コンテナ間で通信を行うためのネットワークブリッジ
networks:
  mysql_bridge:
    driver: bridge
volumes:
  data-volume: